pipeline {
    agent any

    tools {
        nodejs '20.13.1' // Use the configured Node.js version
    }

    stages {

        // stage('Run Tests') {
        //     steps {
        //         script {
        //           dir('express_service/services/job'){
        //             sh 'npm i'
        //             sh 'cp .env.example .env'
        //             sh 'npm test -- --forceExit'
        //           }
        //         }
        //     }
        // }


        stage('Deploy') {
            steps {
                script {
                    sshagent(credentials:['topdevclone-vm']) {
                        // Ensure the .ssh directory exists and then add the host key to known_hosts
                        sh """
                        mkdir -p ~/.ssh
                        ssh-keyscan -H 20.6.10.42 >> ~/.ssh/known_hosts
                        """

                        // Deployment commands
                        sh """
                        ssh -t azure@20.6.10.42 'sudo rm -rf TopDevCloneBE && git clone https://github.com/kuroneko2002/TopDevCloneBE.git && cd TopDevCloneBE/express_service && docker image prune -a -f && docker compose down && docker compose build && for service in authentication job user application gateway nginx-loadbalancer; do docker tag express_service_$service pbhuy/$service:latest && docker image push pbhuy/$service; done'
                        
                        """
                    }
                }
            }
        }

        // stage('Push docker hub') {
        //     steps {
        //         script {
        //             sshagent(credentials:['topdevclone-vm']) {
        //                 // Ensure the .ssh directory exists and then add the host key to known_hosts
        //                 sh """
        //                 mkdir -p ~/.ssh
        //                 ssh-keyscan -H 20.6.10.42 >> ~/.ssh/known_hosts
        //                 """

        //                 // Deployment commands
        //                 sh """
        //                 ssh -t azure@20.6.10.42 ''
                        
        //                 """
        //             }
        //         }
        //     }
        // }

        stage('deploy swarm') {
            steps {
                script {
                    sshagent(credentials:['topdevclone-vm']) {
                        // Ensure the .ssh directory exists and then add the host key to known_hosts
                        sh """
                        mkdir -p ~/.ssh
                        ssh-keyscan -H 20.6.10.42 >> ~/.ssh/known_hosts
                        """

                        // Deployment commands
                        sh """
                        ssh -t azure@20.6.10.42 'cd TopDevCloneBE/express_service && docker stack rm express_service && docker system prune -f && docker stack deploy -c docker-deploy.yml express_service'
                        """
                    }
                }
            }
        }
    }
}